Parameters:
  WithDB:
    Type: String
    AllowedValues:
      - true
      - false
    Default: false
    Description: Enter true if SearchTable, AnnouncementsTable and PreferencesTable do not not exist
Conditions:
  CreateDBTables: !Equals
    - !Ref WithDB
    - true
Resources:
  SearchTable:
    Type: "AWS::DynamoDB::Table"
    Condition: CreateDBTables
    DeletionPolicy: Retain
    Properties:
      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled: ${self:custom.enableBackups.${self:provider.stage}, self:custom.enableBackups.other}
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      BillingMode: PAY_PER_REQUEST
      TableName: ${self:custom.searchTable}
  AnnouncementsTable:
    Type: "AWS::DynamoDB::Table"
    Condition: CreateDBTables
    DeletionPolicy: Retain
    Properties:
      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled: ${self:custom.enableBackups.${self:provider.stage}, self:custom.enableBackups.other}
      KeySchema:
        - AttributeName: active
          KeyType: HASH
        - AttributeName: createdTime
          KeyType: RANGE
      AttributeDefinitions:
        - AttributeName: active
          AttributeType: S
        - AttributeName: createdTime
          AttributeType: S
      BillingMode: PAY_PER_REQUEST
      TableName: ${self:custom.announcementsTable}
  PreferencesTable:
    Type: "AWS::DynamoDB::Table"
    Condition: CreateDBTables
    DeletionPolicy: Retain
    Properties:
      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled: ${self:custom.enableBackups.${self:provider.stage}, self:custom.enableBackups.other}
      KeySchema:
        - AttributeName: username
          KeyType: HASH
      AttributeDefinitions:
        - AttributeName: username
          AttributeType: S
      BillingMode: PAY_PER_REQUEST
      TableName: ${self:custom.preferencesTable}
