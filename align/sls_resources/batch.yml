Resources:

  ComputeAlignmentEnv:
    Type: AWS::Batch::ComputeEnvironment
    Properties:
      Type: MANAGED
      State: ENABLED
      ServiceRole: !Ref BatchServiceRole
      ComputeEnvironmentName: "${self:custom.stackName}-align-compute-env"
      ComputeResources:
        Type: EC2
        MinvCpus: 0
        DesiredvCpus: 0
        MaxvCpus: 64
        InstanceTypes:
          - optimal
        ImageId: ${self:custom.ec2AlignmentImageId}
        Subnets:
          - !Ref AppSubnet1
        SecurityGroupIds:
          - !Ref AppSecurityGroup
        InstanceRole: ecsInstanceRole
        Tags: ${self:provider.stackTags}

  ComputeAlignmentJobQueue:
    Type: AWS::Batch::JobQueue
    Properties:
      ComputeEnvironmentOrder:
        - Order: 0
          ComputeEnvironment: !Ref ComputeAlignmentEnv
      State: ENABLED
      Priority: 200
      JobQueueName: "${self:service}-${self:provider.stage}-align-job-queue"

  ComputeBrainAlignmentJobDefinition:
    Type: "AWS::Batch::JobDefinition"
    Properties:
      JobDefinitionName: "${self:service}-${self:provider.stage}-align-brain-job-definition"
      Type: Container
      RetryStrategy:
        Attempts: 1
      Timeout:
        AttemptDurationSeconds: 9000
      Parameters:
        iam_role: auto
        debug_flag: ${self:custom.debug}
        templates_bucket: ${self:custom.alignmentTemplatesBucket}
        inputs_bucket: ${self:custom.alignInputBucket}
        outputs_bucket: ${self:custom.alignOutputBucket}
        templates_dir: ${self:custom.brainAlignmentTemplatesFolder}
        xy_resolution: "0"
        z_resolution: "0"
        reference_channel: "Signal_amount"
        comparison_alg: "Max"
        force_voxel_size: false
        nslots: ${self:custom.defaultAlignmentThreads}
        remove_aligner_input: "true"
      ContainerProperties:
        Image: ${self:custom.alignmentBrainContainerImage}
        Vcpus: 16
        Memory: 8192
        JobRoleArn: !Ref ECSTaskRole
        Command:
          - /opt/aligner-scripts/run_aligner_using_aws.sh
          - "-debug"
          - "Ref::debug_flag"
          - "--use-iam-role"
          - "Ref::iam_role"
          - "--templates-s3bucket-name"
          - "Ref::templates_bucket"
          - "--inputs-s3bucket-name"
          - "Ref::inputs_bucket"
          - "--outputs-s3bucket-name"
          - "Ref::outputs_bucket"
          - "--templatedir"
          - "Ref::templates_dir"
          - "--xyres"
          - "Ref::xy_resolution"
          - "--zres"
          - "Ref::z_resolution"
          - "--reference-channel"
          - "Ref::reference_channel"
          - "--comparison_alg"
          - "Ref::comparison_alg"
          - "--forceVxSize"
          - "Ref::force_voxel_size"
          - "--nslots"
          - "Ref::nslots"
          - "--search-id"
          - "Ref::search_id"
          - "-i"
          - "Ref::input_filename"
          - "-o"
          - "Ref::output_folder"
          - "--rm"
          - "Ref::remove_aligner_input"
        Volumes:
          - Name: scratch_data_volume
            Host:
              SourcePath: /scratch_volume/data
          - Name: scratch_tmp_volume
            Host:
              SourcePath: /scratch_volume/tmp
        MountPoints:
          - ContainerPath: /scratch
            ReadOnly: false
            SourceVolume: scratch_data_volume
          - ContainerPath: /tmp
            ReadOnly: false
            SourceVolume: scratch_tmp_volume
        Environment:
          - Name: FB_MODE
            Value: xvfb
          - Name: SEARCH_UPDATE_FUNCTION
            Value: ${file(../search/serverless.yml):service}-${self:provider.stage}-searchUpdate
          - Name: ALIGNMENT_MEMORY
            Value: 8G
          - Name: PREALIGN_TIMEOUT
            Value: '7200'
        ReadonlyRootFilesystem: true
        Privileged: true
        LinuxParameters:
          Devices:
            - HostPath: /dev/fuse
              ContainerPath: ""
              Permissions:
                - READ
                - WRITE
                - MKNOD

  ComputeVNCAlignmentJobDefinition:
    Type: "AWS::Batch::JobDefinition"
    Properties:
      JobDefinitionName: "${self:service}-${self:provider.stage}-align-vnc-job-definition"
      Type: Container
      RetryStrategy:
        Attempts: 1
      Timeout:
        AttemptDurationSeconds: 9000
      Parameters:
        iam_role: auto
        debug_flag: ${self:custom.debug}
        templates_bucket: ${self:custom.alignmentTemplatesBucket}
        inputs_bucket: ${self:custom.alignInputBucket}
        outputs_bucket: ${self:custom.alignOutputBucket}
        mip_templates_dir: ${self:custom.mipTemplatesFolder}
        vnc_templates_dir: ${self:custom.vncAlignmentTemplatesFolder}
        nslots: ${self:custom.defaultAlignmentThreads}
        reference_channel: "Signal_amount"
        remove_aligner_input: "true"
      ContainerProperties:
        Image: ${self:custom.alignmentVNCContainerImage}
        Vcpus: 16
        Memory: 8192
        JobRoleArn: !Ref ECSTaskRole
        Command:
          - /opt/aligner-scripts/run_aligner_using_aws.sh
          - "-debug"
          - "Ref::debug_flag"
          - "--use-iam-role"
          - "Ref::iam_role"
          - "--templates-s3bucket-name"
          - "Ref::templates_bucket"
          - "--inputs-s3bucket-name"
          - "Ref::inputs_bucket"
          - "--outputs-s3bucket-name"
          - "Ref::outputs_bucket"
          - "--mip-templatedir"
          - "Ref::mip_templates_dir"
          - "--vnc-templatedir"
          - "Ref::vnc_templates_dir"
          - "--nslots"
          - "Ref::nslots"
          - "--reference-channel"
          - "Ref::reference_channel"
          - "--search-id"
          - "Ref::search_id"
          - "-i"
          - "Ref::input_filename"
          - "-o"
          - "Ref::output_folder"
          - "--rm"
          - "Ref::remove_aligner_input"
        Volumes:
          - Name: scratch_data_volume
            Host:
              SourcePath: /scratch_volume/data
          - Name: scratch_tmp_volume
            Host:
              SourcePath: /scratch_volume/tmp
        MountPoints:
          - ContainerPath: /scratch
            ReadOnly: false
            SourceVolume: scratch_data_volume
          - ContainerPath: /tmp
            ReadOnly: false
            SourceVolume: scratch_tmp_volume
        Environment:
          - Name: SEARCH_UPDATE_FUNCTION
            Value: ${file(../search/serverless.yml):service}-${self:provider.stage}-searchUpdate
          - Name: ALIGNMENT_MEMORY
            Value: 8G
          - Name: PREALIGN_TIMEOUT
            Value: '7200'
        ReadonlyRootFilesystem: true
        Privileged: true
        LinuxParameters:
          Devices:
            - HostPath: /dev/fuse
              ContainerPath: ""
              Permissions:
                - READ
                - WRITE
                - MKNOD

  BatchServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - "batch.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AWSBatchServiceRole"
        - "arn:aws:iam::aws:policy/AmazonS3FullAccess"

  ECSTaskRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - "ecs-tasks.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/AmazonS3FullAccess"
        - "arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy"
      Policies:
        - PolicyName: AWSLambdaInvokeAccess
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action:
                  - lambda:InvokeFunction
                  - lambda:InvokeAsync
                Resource: '*'
            Version: '2012-10-17'
